digraph "classes" {
rankdir=BT
charset="utf-8"
"src.mash.records.BSAPack" [color="black", fontcolor="black", label=<{BSAPack|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"src.mash.records.Book" [color="black", fontcolor="black", label=<{Book|enchant : NoneType<br ALIGN="LEFT"/>enchantPoints : int<br ALIGN="LEFT"/>icon : NoneType<br ALIGN="LEFT"/>id<br ALIGN="LEFT"/>isDeleted : bool<br ALIGN="LEFT"/>isScroll : int<br ALIGN="LEFT"/>model : str<br ALIGN="LEFT"/>script : NoneType<br ALIGN="LEFT"/>teaches : int<br ALIGN="LEFT"/>text : NoneType<br ALIGN="LEFT"/>title : NoneType<br ALIGN="LEFT"/>value : int<br ALIGN="LEFT"/>weight : int<br ALIGN="LEFT"/>|dumpData(out)<br ALIGN="LEFT"/>loadData(ins)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.Cell" [color="black", fontcolor="black", label=<{Cell|cellName<br ALIGN="LEFT"/>endRecords : list<br ALIGN="LEFT"/>flags<br ALIGN="LEFT"/>gridX<br ALIGN="LEFT"/>gridY<br ALIGN="LEFT"/>objects : list<br ALIGN="LEFT"/>records : list<br ALIGN="LEFT"/>skipObjRecords : bool<br ALIGN="LEFT"/>tempObjects : list<br ALIGN="LEFT"/>|cmpId(other)<br ALIGN="LEFT"/>dumpData(out)<br ALIGN="LEFT"/>getId()<br ALIGN="LEFT"/>getObjects()<br ALIGN="LEFT"/>loadData(ins)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.Cell_Acdt" [color="black", fontcolor="black", label=<{Cell_Acdt|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"src.mash.records.Cell_Chrd" [color="black", fontcolor="black", label=<{Cell_Chrd|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"src.mash.records.Cell_Frmr" [color="black", fontcolor="black", label=<{Cell_Frmr|name : str<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"src.mash.records.Cell_Objects" [color="black", fontcolor="black", label=<{Cell_Objects|cell<br ALIGN="LEFT"/>|isTemp(object)<br ALIGN="LEFT"/>list()<br ALIGN="LEFT"/>remove(object)<br ALIGN="LEFT"/>replace(object, newObject)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.Cntc" [color="black", fontcolor="black", label=<{Cntc|id : NoneType<br ALIGN="LEFT"/>index : int<br ALIGN="LEFT"/>|loadData(ins)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.ContentRecord" [color="black", fontcolor="black", label=<{ContentRecord|<br ALIGN="LEFT"/>|getId()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.Crec" [color="black", fontcolor="black", label=<{Crec|id : NoneType<br ALIGN="LEFT"/>index : int<br ALIGN="LEFT"/>|loadData(ins)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.Dial" [color="black", fontcolor="black", label=<{Dial|data : NoneType<br ALIGN="LEFT"/>dele : NoneType<br ALIGN="LEFT"/>id : NoneType<br ALIGN="LEFT"/>infos : list<br ALIGN="LEFT"/>type : int<br ALIGN="LEFT"/>unknown1 : NoneType<br ALIGN="LEFT"/>|loadData(ins)<br ALIGN="LEFT"/>sortInfos()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.FileDials" [color="black", fontcolor="black", label=<{FileDials|dials : list<br ALIGN="LEFT"/>infos : dict<br ALIGN="LEFT"/>tes3<br ALIGN="LEFT"/>|dumpText(textFileName, groupBy, spId)<br ALIGN="LEFT"/>load(factory)<br ALIGN="LEFT"/>loadText(textFileName)<br ALIGN="LEFT"/>save(outPath)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.FileInfo" [color="black", fontcolor="black", label=<{FileInfo|ctime<br ALIGN="LEFT"/>dir<br ALIGN="LEFT"/>extras : dict<br ALIGN="LEFT"/>madeBackup : bool<br ALIGN="LEFT"/>masterNames : tuple<br ALIGN="LEFT"/>masterOrder : tuple<br ALIGN="LEFT"/>masterSizes : dict<br ALIGN="LEFT"/>mtime<br ALIGN="LEFT"/>name<br ALIGN="LEFT"/>openMW<br ALIGN="LEFT"/>size : int<br ALIGN="LEFT"/>stats : dict<br ALIGN="LEFT"/>tes3 : int<br ALIGN="LEFT"/>|getHeader()<br ALIGN="LEFT"/>getMasterStatus(masterName)<br ALIGN="LEFT"/>getNextSnapshot()<br ALIGN="LEFT"/>getStats()<br ALIGN="LEFT"/>getStatus()<br ALIGN="LEFT"/>isEsm()<br ALIGN="LEFT"/>isEsp()<br ALIGN="LEFT"/>isEss()<br ALIGN="LEFT"/>isMod()<br ALIGN="LEFT"/>isOmwaddon()<br ALIGN="LEFT"/>isOmwgame()<br ALIGN="LEFT"/>isOmwsave()<br ALIGN="LEFT"/>makeBackup(forceBackup)<br ALIGN="LEFT"/>refresh()<br ALIGN="LEFT"/>sameAs(fileInfo)<br ALIGN="LEFT"/>setMTime(mtime)<br ALIGN="LEFT"/>setType(type)<br ALIGN="LEFT"/>writeAuthor(author)<br ALIGN="LEFT"/>writeAuthorWM()<br ALIGN="LEFT"/>writeDescription(description)<br ALIGN="LEFT"/>writeHedr()<br ALIGN="LEFT"/>writeNew(masters, mtime)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.FileInfos" [color="black", fontcolor="black", label=<{FileInfos|OpenMW<br ALIGN="LEFT"/>corrupted : dict<br ALIGN="LEFT"/>data : dict<br ALIGN="LEFT"/>dir<br ALIGN="LEFT"/>factory<br ALIGN="LEFT"/>table<br ALIGN="LEFT"/>|copy(fileName, destDir, destName, setMTime)<br ALIGN="LEFT"/>delete(fileName)<br ALIGN="LEFT"/>get(key, default)<br ALIGN="LEFT"/>has_key(key)<br ALIGN="LEFT"/>keys()<br ALIGN="LEFT"/>move(fileName, destDir)<br ALIGN="LEFT"/>moveIsSafe(fileName, destDir)<br ALIGN="LEFT"/>refresh()<br ALIGN="LEFT"/>refreshFile(fileName)<br ALIGN="LEFT"/>refresh_Morrowind()<br ALIGN="LEFT"/>refresh_OpenMW()<br ALIGN="LEFT"/>rename(oldName, newName)<br ALIGN="LEFT"/>rightFileType(fileName)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.FileLists" [color="black", fontcolor="black", label=<{FileLists|levcs : dict<br ALIGN="LEFT"/>levis : dict<br ALIGN="LEFT"/>records<br ALIGN="LEFT"/>srcMods : dict<br ALIGN="LEFT"/>tes3<br ALIGN="LEFT"/>|beginMerge()<br ALIGN="LEFT"/>completeMerge()<br ALIGN="LEFT"/>load()<br ALIGN="LEFT"/>mergeWith(newFL)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.FileRefs" [color="black", fontcolor="black", label=<{FileRefs|cells : list<br ALIGN="LEFT"/>cells_id : dict<br ALIGN="LEFT"/>conts : list<br ALIGN="LEFT"/>conts_id : dict<br ALIGN="LEFT"/>debrisIds : dict<br ALIGN="LEFT"/>fileSize<br ALIGN="LEFT"/>fmap : NoneType<br ALIGN="LEFT"/>isDamaged : bool<br ALIGN="LEFT"/>isLoaded : bool<br ALIGN="LEFT"/>lands : dict<br ALIGN="LEFT"/>records : list<br ALIGN="LEFT"/>refs_scpt : dict<br ALIGN="LEFT"/>scptRefs : set<br ALIGN="LEFT"/>skipObjRecords : bool<br ALIGN="LEFT"/>tes3 : NoneType<br ALIGN="LEFT"/>|getFirstObjectIndex()<br ALIGN="LEFT"/>getObjectMap(oldRefs)<br ALIGN="LEFT"/>listBadRefScripts()<br ALIGN="LEFT"/>load()<br ALIGN="LEFT"/>refresh()<br ALIGN="LEFT"/>refreshSize()<br ALIGN="LEFT"/>remap(newMasters, modMap, objMaps)<br ALIGN="LEFT"/>remapObject(object, newIMod, newIObj)<br ALIGN="LEFT"/>removeLvcrs()<br ALIGN="LEFT"/>removeOrphanContents()<br ALIGN="LEFT"/>removeRefsById(objIds, safeCells)<br ALIGN="LEFT"/>renumberObjects(first)<br ALIGN="LEFT"/>replaceRefsById(refReplacer)<br ALIGN="LEFT"/>save(outPath)<br ALIGN="LEFT"/>setDebrisIds()<br ALIGN="LEFT"/>updateScptRefs()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.FileRep" [color="black", fontcolor="black", label=<{FileRep|canSave : bool<br ALIGN="LEFT"/>fileInfo<br ALIGN="LEFT"/>indexed : dict<br ALIGN="LEFT"/>log<br ALIGN="LEFT"/>progress<br ALIGN="LEFT"/>records : list<br ALIGN="LEFT"/>tes3 : NoneType<br ALIGN="LEFT"/>|getRecord(type, id, Class)<br ALIGN="LEFT"/>indexRecords(indexTypes)<br ALIGN="LEFT"/>load(keepTypes, factory)<br ALIGN="LEFT"/>loadUI(factory)<br ALIGN="LEFT"/>safeSave()<br ALIGN="LEFT"/>save(outPath)<br ALIGN="LEFT"/>setRecord(record)<br ALIGN="LEFT"/>sortRecords()<br ALIGN="LEFT"/>unpackRecords(unpackTypes)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.FileScripts" [color="black", fontcolor="black", label=<{FileScripts|scripts : list<br ALIGN="LEFT"/>tes3<br ALIGN="LEFT"/>|dumpText(textFileName)<br ALIGN="LEFT"/>load(factory)<br ALIGN="LEFT"/>loadText(textFileName)<br ALIGN="LEFT"/>save(outPath)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.Fmap" [color="black", fontcolor="black", label=<{Fmap|BORDER<br ALIGN="LEFT"/>DEEP<br ALIGN="LEFT"/>GRID<br ALIGN="LEFT"/>LAND<br ALIGN="LEFT"/>MARKED<br ALIGN="LEFT"/>SHALLOW<br ALIGN="LEFT"/>mapd : NoneType, list<br ALIGN="LEFT"/>|drawBorder(color, x1, y1, x2, y2, thick)<br ALIGN="LEFT"/>drawCell(land, uland, vland, marked)<br ALIGN="LEFT"/>drawGrid(gridLines)<br ALIGN="LEFT"/>drawRect(color, x1, y1, x2, y2)<br ALIGN="LEFT"/>dumpData(out)<br ALIGN="LEFT"/>edit()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.Glob" [color="black", fontcolor="black", label=<{Glob|id<br ALIGN="LEFT"/>isDeleted : bool<br ALIGN="LEFT"/>type : str<br ALIGN="LEFT"/>value : int<br ALIGN="LEFT"/>|dumpData(out)<br ALIGN="LEFT"/>loadData(ins)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.Info" [color="black", fontcolor="black", label=<{Info|cell : NoneType<br ALIGN="LEFT"/>id : str<br ALIGN="LEFT"/>isDeleted : bool<br ALIGN="LEFT"/>nextId : str<br ALIGN="LEFT"/>pcFaction : NoneType<br ALIGN="LEFT"/>pcRank : int<br ALIGN="LEFT"/>prevId : str<br ALIGN="LEFT"/>qflag : int<br ALIGN="LEFT"/>script : NoneType<br ALIGN="LEFT"/>spClass : NoneType<br ALIGN="LEFT"/>spDisp : int<br ALIGN="LEFT"/>spFaction : NoneType<br ALIGN="LEFT"/>spId : NoneType<br ALIGN="LEFT"/>spRace : NoneType<br ALIGN="LEFT"/>spRank : int<br ALIGN="LEFT"/>spSex : int<br ALIGN="LEFT"/>speak : NoneType<br ALIGN="LEFT"/>tests : list<br ALIGN="LEFT"/>text : NoneType<br ALIGN="LEFT"/>type : int<br ALIGN="LEFT"/>unk02 : int<br ALIGN="LEFT"/>|compactTests(mode)<br ALIGN="LEFT"/>dumpData(out)<br ALIGN="LEFT"/>loadData(ins)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.InfoS" [color="black", fontcolor="black", label=<{InfoS|id : NoneType<br ALIGN="LEFT"/>nextId : NoneType<br ALIGN="LEFT"/>prevId : NoneType<br ALIGN="LEFT"/>records : list<br ALIGN="LEFT"/>spId : NoneType<br ALIGN="LEFT"/>text : NoneType<br ALIGN="LEFT"/>|dumpData(out)<br ALIGN="LEFT"/>loadData(ins)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.Info_Test" [color="black", fontcolor="black", label=<{Info_Test|func<br ALIGN="LEFT"/>oper<br ALIGN="LEFT"/>text : str<br ALIGN="LEFT"/>type<br ALIGN="LEFT"/>value : int<br ALIGN="LEFT"/>|dumpData(out, index)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.Land" [color="black", fontcolor="black", label=<{Land|gridX<br ALIGN="LEFT"/>gridY<br ALIGN="LEFT"/>heights : NoneType, array<br ALIGN="LEFT"/>id : NoneType<br ALIGN="LEFT"/>|getHeights()<br ALIGN="LEFT"/>getId()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.Levc" [color="black", fontcolor="black", label=<{Levc|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"src.mash.records.Levi" [color="black", fontcolor="black", label=<{Levi|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"src.mash.records.ListRecord" [color="black", fontcolor="black", label=<{ListRecord|calcForEachItem : bool<br ALIGN="LEFT"/>calcFromAllLevels : bool<br ALIGN="LEFT"/>chanceNone : int<br ALIGN="LEFT"/>count : int<br ALIGN="LEFT"/>data : NoneType<br ALIGN="LEFT"/>entries : list<br ALIGN="LEFT"/>id : NoneType<br ALIGN="LEFT"/>isDeleted : bool<br ALIGN="LEFT"/>|dumpData(out)<br ALIGN="LEFT"/>loadData(ins)<br ALIGN="LEFT"/>mergeWith(newLevl)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.ModInfo" [color="black", fontcolor="black", label=<{ModInfo|<br ALIGN="LEFT"/>|isExOverLoaded()<br ALIGN="LEFT"/>isWellOrdered()<br ALIGN="LEFT"/>setMTime(mtime)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.ModInfos" [color="black", fontcolor="black", label=<{ModInfos|OpenMW<br ALIGN="LEFT"/>doubleTime : dict<br ALIGN="LEFT"/>mtimes<br ALIGN="LEFT"/>mtimesReset : list<br ALIGN="LEFT"/>objectMaps : NoneType, dict<br ALIGN="LEFT"/>resetMTimes<br ALIGN="LEFT"/>|addObjectMap(fromMod, toMod, objectMap)<br ALIGN="LEFT"/>circularMasters(stack, masters)<br ALIGN="LEFT"/>delete(fileName)<br ALIGN="LEFT"/>getLoadOrder(modNames, asTuple)<br ALIGN="LEFT"/>getObjectMap(fromMod, toMod)<br ALIGN="LEFT"/>getObjectMaps(toMod)<br ALIGN="LEFT"/>getResourceReplacers()<br ALIGN="LEFT"/>getVersion(fileName)<br ALIGN="LEFT"/>isLoaded(fileName)<br ALIGN="LEFT"/>load(fileNames, doSave)<br ALIGN="LEFT"/>loadObjectMaps()<br ALIGN="LEFT"/>move(fileName, destDir)<br ALIGN="LEFT"/>refresh()<br ALIGN="LEFT"/>refreshDoubleTime()<br ALIGN="LEFT"/>refreshFile(fileName)<br ALIGN="LEFT"/>refreshMTimes()<br ALIGN="LEFT"/>removeObjectMap(fromMod, toMod)<br ALIGN="LEFT"/>rename(oldName, newName)<br ALIGN="LEFT"/>rightFileType(fileName)<br ALIGN="LEFT"/>saveObjectMaps()<br ALIGN="LEFT"/>unload(fileNames, doSave)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.Npcc" [color="black", fontcolor="black", label=<{Npcc|id : NoneType<br ALIGN="LEFT"/>index : int<br ALIGN="LEFT"/>|loadData(ins)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.Record" [color="black", fontcolor="black", label=<{Record|changed : bool<br ALIGN="LEFT"/>data : NoneType<br ALIGN="LEFT"/>delFlag<br ALIGN="LEFT"/>id : NoneType<br ALIGN="LEFT"/>inName : NoneType<br ALIGN="LEFT"/>name<br ALIGN="LEFT"/>recFlag<br ALIGN="LEFT"/>size<br ALIGN="LEFT"/>|dump(out)<br ALIGN="LEFT"/>dumpData(out)<br ALIGN="LEFT"/>getId()<br ALIGN="LEFT"/>getReader()<br ALIGN="LEFT"/>getSize()<br ALIGN="LEFT"/>load(ins, unpack)<br ALIGN="LEFT"/>loadData(ins)<br ALIGN="LEFT"/>setChanged(value)<br ALIGN="LEFT"/>setData(data)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.RefReplacer" [color="black", fontcolor="black", label=<{RefReplacer|newIds : dict<br ALIGN="LEFT"/>newIndex : dict<br ALIGN="LEFT"/>srcDepends : dict<br ALIGN="LEFT"/>srcModName : NoneType<br ALIGN="LEFT"/>usedIds : set<br ALIGN="LEFT"/>|clearUsage()<br ALIGN="LEFT"/>getNewId(oldId)<br ALIGN="LEFT"/>getSrcRecords()<br ALIGN="LEFT"/>loadText(filePath)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.ReplJournalDate" [color="black", fontcolor="black", label=<{ReplJournalDate|prevDate : NoneType<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"src.mash.records.ResPack" [color="black", fontcolor="black", label=<{ResPack|<br ALIGN="LEFT"/>|duplicate(newName)<br ALIGN="LEFT"/>getOrder()<br ALIGN="LEFT"/>isSelected()<br ALIGN="LEFT"/>rename(newName)<br ALIGN="LEFT"/>select()<br ALIGN="LEFT"/>unselect()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.ResPacks" [color="black", fontcolor="black", label=<{ResPacks|data : dict<br ALIGN="LEFT"/>|refresh()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.ResReplacerPack" [color="black", fontcolor="black", label=<{ResReplacerPack|<br ALIGN="LEFT"/>|}>, shape="record", style="solid"];
"src.mash.records.ResourceReplacer" [color="black", fontcolor="black", label=<{ResourceReplacer|cumSize : int<br ALIGN="LEFT"/>dirExts : dict<br ALIGN="LEFT"/>file<br ALIGN="LEFT"/>progress : NoneType<br ALIGN="LEFT"/>replacerDir<br ALIGN="LEFT"/>textureExts : set<br ALIGN="LEFT"/>totSize : int<br ALIGN="LEFT"/>|apply(progress)<br ALIGN="LEFT"/>applyDir(srcDir, destDir, exts)<br ALIGN="LEFT"/>doRoot(action)<br ALIGN="LEFT"/>isApplied()<br ALIGN="LEFT"/>remove()<br ALIGN="LEFT"/>removeDir(srcDir, destDir, exts)<br ALIGN="LEFT"/>sizeDir(srcDir, destDir, exts)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.SaveInfo" [color="black", fontcolor="black", label=<{SaveInfo|tes3<br ALIGN="LEFT"/>|getJournal()<br ALIGN="LEFT"/>getScreenshot()<br ALIGN="LEFT"/>getStatus()<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.SaveInfos" [color="black", fontcolor="black", label=<{SaveInfos|<br ALIGN="LEFT"/>|rightFileType(fileName)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.Scpt" [color="black", fontcolor="black", label=<{Scpt|dataSize : int<br ALIGN="LEFT"/>id : NoneType<br ALIGN="LEFT"/>numFloats : int<br ALIGN="LEFT"/>numLongs : int<br ALIGN="LEFT"/>numShorts : int<br ALIGN="LEFT"/>rnam : NoneType<br ALIGN="LEFT"/>scdt : NoneType<br ALIGN="LEFT"/>sctx : NoneType<br ALIGN="LEFT"/>scvr : NoneType<br ALIGN="LEFT"/>slcs : NoneType<br ALIGN="LEFT"/>slfd : NoneType<br ALIGN="LEFT"/>slld : NoneType<br ALIGN="LEFT"/>slsd : NoneType<br ALIGN="LEFT"/>subRecordNames : list<br ALIGN="LEFT"/>varSize : int<br ALIGN="LEFT"/>|dumpData(out)<br ALIGN="LEFT"/>getRef()<br ALIGN="LEFT"/>loadData(ins)<br ALIGN="LEFT"/>setCode(code)<br ALIGN="LEFT"/>setRef(reference)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.SubRecord" [color="black", fontcolor="black", label=<{SubRecord|changed : bool<br ALIGN="LEFT"/>data : NoneType<br ALIGN="LEFT"/>inName : NoneType<br ALIGN="LEFT"/>name<br ALIGN="LEFT"/>size<br ALIGN="LEFT"/>|dump(out)<br ALIGN="LEFT"/>dumpData(out)<br ALIGN="LEFT"/>getSize()<br ALIGN="LEFT"/>load(ins, unpack)<br ALIGN="LEFT"/>setChanged(value)<br ALIGN="LEFT"/>setData(data)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.Tes3" [color="black", fontcolor="black", label=<{Tes3|changed : int<br ALIGN="LEFT"/>data : NoneType<br ALIGN="LEFT"/>gmdt : NoneType<br ALIGN="LEFT"/>hedr : NoneType<br ALIGN="LEFT"/>masters : list<br ALIGN="LEFT"/>others : NoneType, list<br ALIGN="LEFT"/>|dumpData(out)<br ALIGN="LEFT"/>loadData(ins)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.Tes3Reader" [color="black", fontcolor="black", label=<{Tes3Reader|inName<br ALIGN="LEFT"/>ins<br ALIGN="LEFT"/>size<br ALIGN="LEFT"/>|atEnd()<br ALIGN="LEFT"/>close()<br ALIGN="LEFT"/>findSubRecord(subName, recType)<br ALIGN="LEFT"/>read(size, recType)<br ALIGN="LEFT"/>seek(offset, whence, recType)<br ALIGN="LEFT"/>tell()<br ALIGN="LEFT"/>unpack(format, size, recType)<br ALIGN="LEFT"/>unpackRecHeader()<br ALIGN="LEFT"/>unpackSubHeader(recType, expName, expSize)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.Tes3Writer" [color="black", fontcolor="black", label=<{Tes3Writer|out<br ALIGN="LEFT"/>|close()<br ALIGN="LEFT"/>getvalue()<br ALIGN="LEFT"/>pack(format)<br ALIGN="LEFT"/>packSub(type, data)<br ALIGN="LEFT"/>packSub0(type, data)<br ALIGN="LEFT"/>write(data)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.Tes3_Gmdt" [color="black", fontcolor="black", label=<{Tes3_Gmdt|curCell<br ALIGN="LEFT"/>curHealth<br ALIGN="LEFT"/>data<br ALIGN="LEFT"/>day<br ALIGN="LEFT"/>maxHealth<br ALIGN="LEFT"/>playerName<br ALIGN="LEFT"/>size<br ALIGN="LEFT"/>unknown1<br ALIGN="LEFT"/>unknown2<br ALIGN="LEFT"/>|getSize()<br ALIGN="LEFT"/>load(ins, unpack)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.Tes3_Hedr" [color="black", fontcolor="black", label=<{Tes3_Hedr|author : str<br ALIGN="LEFT"/>changed : int<br ALIGN="LEFT"/>data<br ALIGN="LEFT"/>description : str<br ALIGN="LEFT"/>fileType : int<br ALIGN="LEFT"/>numRecords : int<br ALIGN="LEFT"/>size<br ALIGN="LEFT"/>version : float<br ALIGN="LEFT"/>|getSize()<br ALIGN="LEFT"/>load(ins, unpack)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.WorldRefs" [color="black", fontcolor="black", label=<{WorldRefs|cellRefAlts : dict<br ALIGN="LEFT"/>cellRefIds : dict<br ALIGN="LEFT"/>debrisIds : dict<br ALIGN="LEFT"/>extCellNames : set<br ALIGN="LEFT"/>lands : dict<br ALIGN="LEFT"/>levListMasters : dict<br ALIGN="LEFT"/>log<br ALIGN="LEFT"/>masterNames : list<br ALIGN="LEFT"/>progress<br ALIGN="LEFT"/>|addMaster(masterName)<br ALIGN="LEFT"/>addMasters(masterNames)<br ALIGN="LEFT"/>getMasterMap(masterInfo)<br ALIGN="LEFT"/>removeDebrisCells(fileRefs)<br ALIGN="LEFT"/>removeDebrisRecords(fileRefs)<br ALIGN="LEFT"/>removeOverLists(fileRefs)<br ALIGN="LEFT"/>repair(fileRefs)<br ALIGN="LEFT"/>repairWorldMap(fileRefs, gridLines)<br ALIGN="LEFT"/>repairWorldMapMCP(fileRefs, gridLines)<br ALIGN="LEFT"/>}>, shape="record", style="solid"];
"src.mash.records.BSAPack" -> "src.mash.records.ResPack" [arrowhead="empty", arrowtail="none"];
"src.mash.records.ContentRecord" -> "src.mash.records.Record" [arrowhead="empty", arrowtail="none"];
"src.mash.records.FileDials" -> "src.mash.records.FileRep" [arrowhead="empty", arrowtail="none"];
"src.mash.records.FileLists" -> "src.mash.records.FileRep" [arrowhead="empty", arrowtail="none"];
"src.mash.records.FileRefs" -> "src.mash.records.FileRep" [arrowhead="empty", arrowtail="none"];
"src.mash.records.FileScripts" -> "src.mash.records.FileRep" [arrowhead="empty", arrowtail="none"];
"src.mash.records.ListRecord" -> "src.mash.records.Record" [arrowhead="empty", arrowtail="none"];
"src.mash.records.ModInfo" -> "src.mash.records.FileInfo" [arrowhead="empty", arrowtail="none"];
"src.mash.records.ModInfos" -> "src.mash.records.FileInfos" [arrowhead="empty", arrowtail="none"];
"src.mash.records.ResReplacerPack" -> "src.mash.records.ResPack" [arrowhead="empty", arrowtail="none"];
"src.mash.records.SaveInfo" -> "src.mash.records.FileInfo" [arrowhead="empty", arrowtail="none"];
"src.mash.records.SaveInfos" -> "src.mash.records.FileInfos" [arrowhead="empty", arrowtail="none"];
"src.mash.records.Tes3" -> "src.mash.records.Record" [arrowhead="empty", arrowtail="none"];
"src.mash.records.SubRecord" -> "src.mash.records.Scpt" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="scdt", style="solid"];
"src.mash.records.SubRecord" -> "src.mash.records.Scpt" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="sctx", style="solid"];
"src.mash.records.Tes3" -> "src.mash.records.FileDials" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="tes3", style="solid"];
"src.mash.records.Tes3" -> "src.mash.records.FileInfo" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="tes3", style="solid"];
"src.mash.records.Tes3" -> "src.mash.records.FileLists" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="tes3", style="solid"];
"src.mash.records.Tes3" -> "src.mash.records.FileRefs" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="tes3", style="solid"];
"src.mash.records.Tes3" -> "src.mash.records.FileRep" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="tes3", style="solid"];
"src.mash.records.Tes3" -> "src.mash.records.FileScripts" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="tes3", style="solid"];
"src.mash.records.Tes3" -> "src.mash.records.SaveInfo" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="tes3", style="solid"];
"src.mash.records.Tes3_Gmdt" -> "src.mash.records.Tes3" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="gmdt", style="solid"];
"src.mash.records.Tes3_Hedr" -> "src.mash.records.Tes3" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="hedr", style="solid"];
"src.mash.records.Tes3_Hedr" -> "src.mash.records.Tes3" [arrowhead="diamond", arrowtail="none", fontcolor="green", label="hedr", style="solid"];
"src.mash.records.FileInfo" -> "src.mash.records.FileInfos" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="factory", style="solid"];
"src.mash.records.Fmap" -> "src.mash.records.FileRefs" [arrowhead="odiamond", arrowtail="none", fontcolor="green", label="fmap", style="solid"];
}
